{"ast":null,"code":"var _jsxFileName = \"/home/isafi/Downloads/mern-graphql-crud-app-main/client/src/components/Edit.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nconst GET_STUDENT = gql`\n    query student($studentId: String) {\n        student(id: $studentId) {\n            _id\n            name\n            email\n            phone\n            dob\n            subjects\n            updated_date\n        }\n    }\n`;\nconst UPDATE_STUDENT = gql`\n    mutation updateStudent(\n      $id: String!,\n      $name: String!,\n      $email: String!,\n      $phone: Int!,\n      $dob: Int!,\n      $subjects: String!)  {\n        updateStudent(\n          id: $id,\n          name: $name,\n          email: $email,\n          phone: $phone,\n          dob: $dob,\n          subjects: $subjects) {\n            updated_date\n        }\n    }\n`;\n\nclass Edit extends Component {\n  render() {\n    let name, email, phone, dob, subjects;\n    return /*#__PURE__*/React.createElement(Query, {\n      query: GET_STUDENT,\n      variables: {\n        studentId: this.props.match.params.id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return 'Loading...';\n      if (error) return `Error! ${error.message}`;\n      return /*#__PURE__*/React.createElement(Mutation, {\n        mutation: UPDATE_STUDENT,\n        key: data.student._id,\n        onCompleted: () => this.props.history.push(`/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, (updateStudent, {\n        loading,\n        error\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"panel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, \"EDIT Student\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }\n      }, \"Student List\")), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          updateStudent({\n            variables: {\n              id: data.student._id,\n              name: name.value,\n              email: email.value,\n              phone: phone.value,\n              dob: dob.value,\n              subjects: subjects.value\n            }\n          });\n          name.value = \"\";\n          email.value = \"\";\n          phone.value = \"\";\n          dob.value = \"\";\n          subjects.value = \"\";\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 27\n        }\n      }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"name\",\n        ref: node => {\n          name = node;\n        },\n        placeholder: \"Name\",\n        defaultValue: data.student.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 27\n        }\n      }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        ref: node => {\n          email = node;\n        },\n        placeholder: \"Email\",\n        defaultValue: data.student.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }\n      }, \"Phone:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control\",\n        name: \"phone\",\n        ref: node => {\n          phone = node;\n        },\n        placeholder: \"Phone\",\n        defaultValue: data.student.phone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"dob\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }\n      }, \"Date Of Birth:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"dob\",\n        ref: node => {\n          dob = node;\n        },\n        placeholder: \"Date Of Birth\",\n        defaultValue: data.student.dob,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"subjects\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }\n      }, \"Subjects:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"subjects\",\n        ref: node => {\n          subjects = node;\n        },\n        placeholder: \"Subjects\",\n        defaultValue: data.student.subjects,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, \"Submit\")), loading && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 35\n        }\n      }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, \"Error :( Please try again\")))));\n    });\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["/home/isafi/Downloads/mern-graphql-crud-app-main/client/src/components/Edit.js"],"names":["React","Component","Link","gql","Query","Mutation","GET_STUDENT","UPDATE_STUDENT","Edit","render","name","email","phone","dob","subjects","studentId","props","match","params","id","loading","error","data","message","student","_id","history","push","updateStudent","e","preventDefault","variables","value","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\n\nconst GET_STUDENT = gql`\n    query student($studentId: String) {\n        student(id: $studentId) {\n            _id\n            name\n            email\n            phone\n            dob\n            subjects\n            updated_date\n        }\n    }\n`;\n\n\nconst UPDATE_STUDENT = gql`\n    mutation updateStudent(\n      $id: String!,\n      $name: String!,\n      $email: String!,\n      $phone: Int!,\n      $dob: Int!,\n      $subjects: String!)  {\n        updateStudent(\n          id: $id,\n          name: $name,\n          email: $email,\n          phone: $phone,\n          dob: $dob,\n          subjects: $subjects) {\n            updated_date\n        }\n    }\n`;\n\nclass Edit extends Component {\n\n  render() {\n    let name, email, phone, dob, subjects;\n    return (\n      <Query query={GET_STUDENT} variables={{ studentId: this.props.match.params.id }}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) return `Error! ${error.message}`;\n\n          return (\n            <Mutation mutation={UPDATE_STUDENT} key={data.student._id} onCompleted={() => this.props.history.push(`/`)}>\n              {(updateStudent, { loading, error }) => (\n                <div className=\"container\">\n                  <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\">\n                      <h3 className=\"panel-title\">\n                        EDIT Student\n                    </h3>\n                    </div>\n                    <div className=\"panel-body\">\n                      <h4><Link to=\"/\" className=\"btn btn-primary\">Student List</Link></h4>\n                      <form onSubmit={e => {\n                        e.preventDefault();\n                        updateStudent({ variables: { id: data.student._id, name: name.value, email: email.value, phone: phone.value, dob: dob.value, subjects: subjects.value } });\n                        name.value = \"\";\n                        email.value = \"\";\n                        phone.value = \"\";\n                        dob.value = \"\";\n                        subjects.value = \"\";\n                        }}>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"name\">Name:</label>\n                          <input type=\"text\" className=\"form-control\" name=\"name\" ref={node => {\n                            name = node;\n                          }} placeholder=\"Name\" defaultValue={data.student.name} />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"email\">Email:</label>\n                          <input type=\"text\" className=\"form-control\" name=\"email\" ref={node => {\n                            email = node;\n                          }} placeholder=\"Email\" defaultValue={data.student.email} />\n                        </div>\n                    \n                        <div className=\"form-group\">\n                          <label htmlFor=\"phone\">Phone:</label>\n                          <textarea className=\"form-control\" name=\"phone\" ref={node => {\n                            phone = node;\n                          }} placeholder=\"Phone\" defaultValue={data.student.phone} />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"dob\">Date Of Birth:</label>\n                          <input type=\"text\" className=\"form-control\" name=\"dob\" ref={node => {\n                            dob = node;\n                          }} placeholder=\"Date Of Birth\" defaultValue={data.student.dob} />\n                        </div>\n\n                        <div className=\"form-group\">\n                          <label htmlFor=\"subjects\">Subjects:</label>\n                          <input type=\"text\" className=\"form-control\" name=\"subjects\" ref={node => {\n                            subjects = node;\n                          }} placeholder=\"Subjects\" defaultValue={data.student.subjects} />\n                        </div>\n                    \n                        <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                      </form>\n                      {loading && <p>Loading...</p>}\n                      {error && <p>Error :( Please try again</p>}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Mutation>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default Edit;"]},"metadata":{},"sourceType":"module"}