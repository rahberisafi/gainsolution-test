{"ast":null,"code":"var _jsxFileName = \"/home/isafi/Downloads/mern-graphql-crud-app-main/client/src/components/Edit.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nconst GET_BOOK = gql`\n    query book($bookId: String) {\n        book(id: $bookId) {\n            _id\n            isbn\n            title\n            author\n            description\n            published_year\n            publisher\n            updated_date\n        }\n    }\n`;\nconst UPDATE_BOOK = gql`\n    mutation updateBook(\n        $id: String!,\n        $isbn: String!,\n        $title: String!,\n        $author: String!,\n        $description: String!,\n        $publisher: String!,\n        $published_year: Int!) {\n        updateBook(\n        id: $id,\n        isbn: $isbn,\n        title: $title,\n        author: $author,\n        description: $description,\n        publisher: $publisher,\n        published_year: $published_year) {\n            updated_date\n        }\n    }\n`;\n\nclass Edit extends Component {\n  render() {\n    let isbn, title, author, description, published_year, publisher;\n    return /*#__PURE__*/React.createElement(Query, {\n      query: GET_BOOK,\n      variables: {\n        bookId: this.props.match.params.id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return 'Loading...';\n      if (error) return `Error! ${error.message}`;\n      return /*#__PURE__*/React.createElement(Mutation, {\n        mutation: UPDATE_BOOK,\n        key: data.book._id,\n        onCompleted: () => this.props.history.push(`/`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, (updateBook, {\n        loading,\n        error\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"panel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, \"EDIT BOOK\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }\n      }, \"Book List\")), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          updateBook({\n            variables: {\n              id: data.book._id,\n              isbn: isbn.value,\n              title: title.value,\n              author: author.value,\n              description: description.value,\n              publisher: publisher.value,\n              published_year: parseInt(published_year.value)\n            }\n          });\n          isbn.value = \"\";\n          title.value = \"\";\n          author.value = \"\";\n          description.value = \"\";\n          publisher.value = null;\n          published_year.value = \"\";\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"isbn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }\n      }, \"ISBN:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"isbn\",\n        ref: node => {\n          isbn = node;\n        },\n        placeholder: \"ISBN\",\n        defaultValue: data.book.isbn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }\n      }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"title\",\n        ref: node => {\n          title = node;\n        },\n        placeholder: \"Title\",\n        defaultValue: data.book.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 27\n        }\n      }, \"Author:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"author\",\n        ref: node => {\n          author = node;\n        },\n        placeholder: \"Author\",\n        defaultValue: data.book.author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 27\n        }\n      }, \"Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-control\",\n        name: \"description\",\n        ref: node => {\n          description = node;\n        },\n        placeholder: \"Description\",\n        cols: \"80\",\n        rows: \"3\",\n        defaultValue: data.book.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 27\n        }\n      }, \"Publisher:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"publisher\",\n        ref: node => {\n          publisher = node;\n        },\n        placeholder: \"Publisher\",\n        defaultValue: data.book.publisher,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 27\n        }\n      }, \"Published Year:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"published_year\",\n        ref: node => {\n          published_year = node;\n        },\n        placeholder: \"Published Year\",\n        defaultValue: data.book.published_year,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"Submit\")), loading && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 35\n        }\n      }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      }, \"Error :( Please try again\")))));\n    });\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["/home/isafi/Downloads/mern-graphql-crud-app-main/client/src/components/Edit.js"],"names":["React","Component","Link","gql","Query","Mutation","GET_BOOK","UPDATE_BOOK","Edit","render","isbn","title","author","description","published_year","publisher","bookId","props","match","params","id","loading","error","data","message","book","_id","history","push","updateBook","e","preventDefault","variables","value","parseInt","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\n\nconst GET_BOOK = gql`\n    query book($bookId: String) {\n        book(id: $bookId) {\n            _id\n            isbn\n            title\n            author\n            description\n            published_year\n            publisher\n            updated_date\n        }\n    }\n`;\n\nconst UPDATE_BOOK = gql`\n    mutation updateBook(\n        $id: String!,\n        $isbn: String!,\n        $title: String!,\n        $author: String!,\n        $description: String!,\n        $publisher: String!,\n        $published_year: Int!) {\n        updateBook(\n        id: $id,\n        isbn: $isbn,\n        title: $title,\n        author: $author,\n        description: $description,\n        publisher: $publisher,\n        published_year: $published_year) {\n            updated_date\n        }\n    }\n`;\n\nclass Edit extends Component {\n\n  render() {\n    let isbn, title, author, description, published_year, publisher;\n    return (\n      <Query query={GET_BOOK} variables={{ bookId: this.props.match.params.id }}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) return `Error! ${error.message}`;\n\n          return (\n            <Mutation mutation={UPDATE_BOOK} key={data.book._id} onCompleted={() => this.props.history.push(`/`)}>\n              {(updateBook, { loading, error }) => (\n                <div className=\"container\">\n                  <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\">\n                      <h3 className=\"panel-title\">\n                        EDIT BOOK\n                                        </h3>\n                    </div>\n                    <div className=\"panel-body\">\n                      <h4><Link to=\"/\" className=\"btn btn-primary\">Book List</Link></h4>\n                      <form onSubmit={e => {\n                        e.preventDefault();\n                        updateBook({ variables: { id: data.book._id, isbn: isbn.value, title: title.value, author: author.value, description: description.value, publisher: publisher.value, published_year: parseInt(published_year.value) } });\n                        isbn.value = \"\";\n                        title.value = \"\";\n                        author.value = \"\";\n                        description.value = \"\";\n                        publisher.value = null;\n                        published_year.value = \"\";\n                      }}>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"isbn\">ISBN:</label>\n                          <input type=\"text\" className=\"form-control\" name=\"isbn\" ref={node => {\n                            isbn = node;\n                          }} placeholder=\"ISBN\" defaultValue={data.book.isbn} />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"title\">Title:</label>\n                          <input type=\"text\" className=\"form-control\" name=\"title\" ref={node => {\n                            title = node;\n                          }} placeholder=\"Title\" defaultValue={data.book.title} />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"author\">Author:</label>\n                          <input type=\"text\" className=\"form-control\" name=\"author\" ref={node => {\n                            author = node;\n                          }} placeholder=\"Author\" defaultValue={data.book.author} />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"description\">Description:</label>\n                          <textarea className=\"form-control\" name=\"description\" ref={node => {\n                            description = node;\n                          }} placeholder=\"Description\" cols=\"80\" rows=\"3\" defaultValue={data.book.description} />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"author\">Publisher:</label>\n                          <input type=\"text\" className=\"form-control\" name=\"publisher\" ref={node => {\n                            publisher = node;\n                          }} placeholder=\"Publisher\" defaultValue={data.book.publisher} />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"author\">Published Year:</label>\n                          <input type=\"number\" className=\"form-control\" name=\"published_year\" ref={node => {\n                            published_year = node;\n                          }} placeholder=\"Published Year\" defaultValue={data.book.published_year} />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                      </form>\n                      {loading && <p>Loading...</p>}\n                      {error && <p>Error :( Please try again</p>}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Mutation>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default Edit;"]},"metadata":{},"sourceType":"module"}